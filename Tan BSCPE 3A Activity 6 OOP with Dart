//Marl Kenneth T. Tan BSCPE 3A
// ACT 6 OOP with Dart

import 'dart:developer';

import 'dart:io';

                class Library with searchIndex, mainMenuProcesses{
                
                         var allBooks, lentBooks, bookList=[], userList=[];
                         List genres=["Computer Science", "Philosophy", "Pure Science", "Art and Recreation", "History"];

  //This portion serves to compile the sets no. of books to 0 and no. of lent books to 0 for every instance of Library
  Library(){
                allBooks=0;
                lentBooks=0;
  }


  //This is where you return the no. of books in library's including the one's that is lent out
  var numOfBooks(){
    return allBooks;
  }


  //Return the value of books that is lent out
  var numOfLent(){
    return lentBooks;
  }

  //This is where you add book to the collection
  //New books will be created if there is library object
  void addBook(String title, String author, String genre, String ISBN){
  
    var book=new Books(title, author, genre, ISBN);
    bookList.add(book);
                allBooks++;
                
  }

  //Lends a book to the user
  void lendBook(int userIndex){
    //The loop will not end until user selects the finish adding option
    for(var doAddBook='1';doAddBook!='2';){

      //There are 2 numbers used 1 means to add book then 2 means to finish adding books
      stdout.write("\n(1)Add book ISBN\n(2)Finish adding\nType choice:");
      doAddBook=stdin.readLineSync()!;

      if(doAddBook=='1'){
        //The loop does not end until user inputs correct ISBN
        for(int bookIndex=-1;bookIndex==-1;){
          stdout.write("\nEnter book ISBN: ");
          String ISBNbyUser=stdin.readLineSync()!;
          bookIndex=findBookIndex(bookList, ISBNbyUser);

          //The function findBookIndex will return -1 
          if(bookIndex==-1)
            print("Book not found. Please enter ISBN again.");
          else if(bookList[bookIndex].status==0)
            print("Book is currently borrowed by someone else.");
          else{
          
          
            //The book is added to the user's list of books to be borrowed
            //Books will be unavailable
            //Lent books will increase
                   userList[userIndex].borrowedBooks.add(bookList[bookIndex]);
                    bookList[bookIndex].status=0;
            lentBooks++;
          }
        }
      }
      
      
      else if(doAddBook=='2')
        print("\nBooks added to borrow list.\n");
      else
        print("Invalid choice. Please try again.");
    }
  }

  //The library accepts book to the client
  //The entire borrow list of the client will be returned 
  
  
  void acceptReturn(int userIndex){
    print("\nReturned books: ");
    if(userList[userIndex].borrowedBooks.length!=0){
      for(int i=0;i<userList[userIndex].borrowedBooks.length;){
      
      
        int bookIndex=findBookIndex(bookList, userList[userIndex].borrowedBooks[i].ISBN);
        userList[userIndex].borrowedBooks.removeAt(0);
        bookList[bookIndex].status=1;
        
        lentBooks--;
        print("\t${bookList[bookIndex].title} by ${bookList[bookIndex].author}");
      }
    }
    
    
    else
      print("\nNo borrowed books in your record.");
  }
  
  //The library will add a new client
                 void newUser(String fullName, String address){
    var user=new User(fullName, address);
    userList.add(user);
    
    
  }
}

//The class for books containing necessary attributes


class Books{
                 late String title;
                 late String author;
                 late String genre;
                 late String ISBN;
                 late int status; //0=borrowed, 1=available
  var booksBorrowed=[];

  //The constructor to set values of attributes for every book instance
  
Books(title, author, genre, ISBN){
                this.title=title;
                this.author=author;
                this.genre=genre;
                this.ISBN=ISBN;
                
                
    status=1; //status is immediately given value of 1 since it is available once added to collection
  }
}

//This class is for users containing necessary attributes


                class User{
                 late String fullName;
                 late String address;
                  var borrowedBooks=[];
                  User(String fullName, String address){
                   this.fullName=fullName;
                   this.address=address;
                   
                   
  }
}

//In this portion this is where you combine for index searching algorithms for books and users
merged searchIndex{

  //Procedure for finding certain book's index in library's client booklist
  //Library books is seeked based on matching ISBN
  
  
  int findBookIndex(var listOfBooks, String ISBN){
    for(int i=0;i<listOfBooks.length;i++){
      if(listOfBooks[i].ISBN==ISBN)
      
        return i;
    }
    
    
    return -1;
  }

  //Procedure for searching for certain person's index in library's users list
  
  //The book user will be searched using his or her full name and address
  
                int findUserIndex(var listOfUsers, String fullName, String address){
    for(int i=0;i<listOfUsers.length;i++){
                  if(listOfUsers[i].fullName==fullName && listOfUsers[i].address==address)
                         return i;
                         
    }
    return -1;
  }
}

//In this portion is where you combine all  for processing of library's main menu
//Pick to use combining in this code
